import pandas as pd
from tabulate import tabulate

#меню выбора 1
input_menu1 = [(1, 'Чтение csv файла'),
              (2, 'Создание нового файла'),
             ('Иначе', 'Выход')]

#меню выбора 2
input_menu2 = [(1, 'Поиск команд'),
               (2, 'Сохранить файл'),
             ('Иначе', 'Выход')]

#название столбцов
col = ['Команда1', 'Счет1', 'Счет2' ,'Команда2']

#функция для агригации результатов игр
def normal_df(df):
    #два датафрейма, из которых выцепляем название команды и количество пропущенных мячей, переименовываем колонки
    df1 = df[['Команда1', 'Счет2']].rename(columns={ 'Команда1':'Команда','Счет2': 'Пропущено'})
    df2 = df[['Команда2', 'Счет1']].rename(columns={ 'Команда2':'Команда','Счет1': 'Пропущено'})
    
    #объединяем таблички по вертикали
    df3 = pd.concat([df1, df2])
    
    #группировка - суммируем пропуски мячей по названиям команды
    df3 = df3.groupby(['Команда']).sum()
    #обновляем индыксы таблицы
    df3 = df3.reset_index()
    #сортируем по пропускам мячей
    return df3.sort_values(['Пропущено'], ignore_index=True)


#функция для создания новой таблицы
def create_table():
    #пустой массив
    df = []
    #название колонок
    col = ['Команда1', 'Счет1', 'Счет2' ,'Команда2']
    #проверялка)
    cheek = True
    while cheek:
        print('Введите через пробел:')
        print('Команда1 Счет1 Счет2 Команда2')
        s = input() 
        #разделяем строку через пробелы "1 2 фыв 31 1" -> ["1","2", "фыв","31", "1"]
        s = s.split()
        # если нас не устраивает длина ( должна быть 4)
        if len(s) != 4:
            print('Ошибка ввода')
        else:
            #пробуем привести счет матча к числовому виду, иначе выдаем ошибку
            try:
                new_row = [s[0], int(s[1]),int(s[2]), s[3]]
                df.append(new_row)
            except:
                print('Ошибка ввода')
        # если вводим 1 - то добавляем новую строчку в табличку, а иначе нет
        input_cheek = input('1 - чтобы добавить еще строчку, иначе - выход')
        try:
            input_cheek = int(input_cheek)
            #если ввели не 1 и наша табличка не пустая, то выходим
            if input_cheek != 1 and df != []:
                cheek = False
            else:
                print('Заполните таблицу')
        except:
            #если табличка не пустая то выходим 
            if df == []:
                print('Заполните таблицу')
            else:
                cheek = False
                #возвращаем сформированную таблицу
    return pd.DataFrame(df, columns = col)
                
    

#работает пока не выберем выход
while True:
    #вывод меню и чтение вводимого параметра
    print(tabulate(input_menu1))
    cheek = input()
    
    #проверка - число ли введеный параметр
    try:
        cheek = int(cheek)
    #если не число - выход
    except:
        print('Bye!')
        break
        
    # если равно 1
    if cheek==1:
        #выбираем путь до файла
        path = input('Укажите путь: ')
        try:
            #пробуем открыть файл
            df = pd.read_csv(path)
            #откидываем первый столбец, тут бесполезные индыксы и применяем изменения
            df.drop(columns=['Unnamed: 0'], inplace = True)
            print('Ваша таблица:')
            #вывод открывшийся таблички
            print(tabulate(df, headers='keys', tablefmt='psql'))
            #если наименование заголовков таблицы не подходят, то говорим, что не подходит)
            if list(df) != col:
                print('Некорректные данные')
                continue
        # если не открывается файл - некорректный путь
        except:
            print('Некорректный путь')
            continue
            
    #выбрали 2 - создаем свою табличку функцией
    elif cheek==2:
        df = create_table()
        #сохраняем таблицу 
        df.to_csv('new_table.csv')
        
    # иначе - выход 
    else:
        print('Bye!')
        break
        
    # функция работы с табличкой и вывод результата
    df_finall = normal_df(df)
    print('Результат')
    print(tabulate(df_finall, headers='keys', tablefmt='psql'))
    
    #пока не будет выбран выход    
    while True:
        #вывод второго меню
        print(tabulate(input_menu2))
        
        # ввод меню и проверка - число ли ввели
        cheek2 = input()

        try:
            cheek2 = int(cheek2)
        except:
            continue
        
        # если ввели 1, то указываем команду
        if cheek2==1:
            team = input('Укажите команду: ')
            #проверяем есть ли такая команда, если она есть то получаем поле "Пропущено" для этой команды
            # ищим команды с таким же количеством "Пропущено"
            try:
                miss = df_finall[df_finall['Команда']==team]['Пропущено'].item()
                df_find = df_finall[(df_finall['Пропущено']==miss)]
                print(tabulate(df_find, headers='keys', tablefmt='psql'))
                
            #если команды не нашлось, сообщаем об этом
            except: 
                print('Такой команды нет')
                continue
                
        # можно сохранить результаты поиска, но надо ввести коректно имя, например, test1.csv
        elif cheek2 == 2:
            path2 = input('Введите имя файла + .csv ')
            try:
                df_find.to_csv(path2)
            except:
                print('Некорректное имя файла или таблица')
                
        #если же введено в меню не 1 и не 2 - выход
        else:
            break
            

    